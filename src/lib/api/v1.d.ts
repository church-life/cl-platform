/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_getHello"];
  };
  "/service-teams": {
    get: operations["ServiceTeamsController_getPublishedPosts"];
  };
  "/ministries": {
    get: operations["MinistriesController_findAll"];
    post: operations["MinistriesController_create"];
  };
  "/ministries/{id}": {
    get: operations["MinistriesController_findOne"];
    delete: operations["MinistriesController_remove"];
    patch: operations["MinistriesController_update"];
  };
  "/users": {
    get: operations["UsersController_findAll"];
    post: operations["UsersController_create"];
  };
  "/users/{id}": {
    get: operations["UsersController_findOne"];
    delete: operations["UsersController_remove"];
    patch: operations["UsersController_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateMinistryDto: {
      /**
       * @description The name of the ministry
       * @example Youth
       */
      name: string;
      /**
       * @description The minimum age for the ministry
       * @example 21
       */
      minAge?: Record<string, never>;
      /**
       * @description The maximum age for the ministry
       * @example 35
       */
      maxAge?: Record<string, never>;
    };
    UpdateMinistryDto: Record<string, never>;
    /**
     * @description The type of document
     * @enum {string}
     */
    DocumentType: "DNI" | "PASSPORT" | "OTHER";
    CreateUserDto: {
      /**
       * @description The display name that will be shown in the app
       * @example Test User
       */
      displayName: string;
      /**
       * @description The names of the user
       * @example Test
       */
      names: string;
      /**
       * @description The last names of the user
       * @example User
       */
      lastNames: string;
      /**
       * Format: date
       * @description The birth date of the user
       * @example 1990-01-01
       */
      birthDate: string;
      /**
       * @description The email of the user
       * @example test@gmail.com
       */
      email: string;
      /** @example CC */
      documentType: components["schemas"]["DocumentType"];
      /**
       * @description The document id of the user
       * @example 1234567890
       */
      documentId: string;
      /**
       * @description The phone number of the user
       * @example +573001234567
       */
      phone: string;
      /**
       * @description The password of the user
       * @example Th1s1sA$tr0ngP@ssw0rd!
       */
      password: string;
    };
    UpdateUserDto: {
      /**
       * @description The display name that will be shown in the app
       * @example Test User
       */
      displayName?: string;
      /**
       * @description The names of the user
       * @example Test
       */
      names?: string;
      /**
       * @description The last names of the user
       * @example User
       */
      lastNames?: string;
      /**
       * Format: date
       * @description The birth date of the user
       * @example 1990-01-01
       */
      birthDate?: string;
      /**
       * @description The email of the user
       * @example test@gmail.com
       */
      email?: string;
      /** @example CC */
      documentType?: components["schemas"]["DocumentType"];
      /**
       * @description The document id of the user
       * @example 1234567890
       */
      documentId?: string;
      /**
       * @description The phone number of the user
       * @example +573001234567
       */
      phone?: string;
      /**
       * @description The password of the user
       * @example Th1s1sA$tr0ngP@ssw0rd!
       */
      password?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_getHello: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ServiceTeamsController_getPublishedPosts: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  MinistriesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  MinistriesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateMinistryDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  MinistriesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  MinistriesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  MinistriesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateMinistryDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  UsersController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
}
